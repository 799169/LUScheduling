package org.learningu.scheduling.graph;

/*
 * A property of a room at an LU program.
 */
message SerialRoomProperty {
	required int32 propertyId = 1;
	optional string description = 2;
	optional bool isBinding = 3 [default = false]; // if present, classes must require this property to get this room
}

/*
 * A course in an LU program.  Courses may have estimated and maximum class sizes,
 * room requirements, and teachers.
 */
message SerialSection {
	required int32 sectionId = 1;
	optional string courseTitle = 2;
	repeated int32 teacherIds = 3 [packed = true];
	optional int32 estimatedClassSize = 5 [default = 15];
	optional int32 maxClassSize = 6 [default = 20];
	optional int32 periodLength = 8 [default = 1];
	required int32 courseId = 10;
	repeated int32 requiredProperty = 9 [packed = true];
	repeated int32 prereqCourseIds = 11 [packed = true];
}

/*
 * A teacher at an LU program.  Teachers may not be available for all time blocks.
 */
message SerialTeacher {
	required int32 teacherId = 1; // teacher identifier number
	optional string name = 2; // teacher name
	repeated int32 availablePeriod = 3 [packed = true]; // teacher availability
}

message SerialDateTime {
	required int32 year = 1;
	required int32 month = 2;
	required int32 day = 3;
	required int32 hour = 4;
	required int32 minute = 5;
	required int32 second = 6;
}

/*
 * A single period at an LU program; the shortest possible length of a class.
 */
message SerialPeriod {
	required int32 periodId = 1;
	optional string shortDescription = 5;
	optional string description = 2;
	optional SerialDateTime start = 3;
	optional SerialDateTime end = 4;
}

/*
 * A block of consecutive periods at an LU program.  Classes may not be scheduled across time blocks.
 * For example, "before lunch" and "after lunch" might be distinct blocks.
 */
message SerialTimeBlock {
	// TODO: multi-block class support; multi-day program support
	required int32 blockId = 1;
	optional string description = 2;
	repeated SerialPeriod period = 4;
}

/*
 * A room at an LU program with possibly some associated properties.
 */
message SerialRoom {
	required int32 roomId = 1;
	optional string name = 3;
	optional int32 capacity = 4 [default = 25];
	repeated int32 availablePeriod = 5 [packed = true];
	repeated int32 roomProperty = 6 [packed = true];
}

/*
 * A specification for an entire LU program, from which a schedule must be constructed.
 */
message SerialProgram {
	optional string name = 5 [default = ""];
	repeated SerialTimeBlock timeBlock = 1;
	repeated SerialTeacher teacher = 2;
	repeated SerialSection section = 3;
	repeated SerialRoom room = 4;
	repeated SerialRoomProperty roomProperty = 6;
}
